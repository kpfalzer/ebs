#!/bin/csh -f

set START=1
set END=64

set i=$START
while (${i} <= $END)
	cat <<L1
    public static class N${i} extends BitVector {
        public N${i}() {
            super();
        }

        @Override
        public int nbits() {
            return __N;
        }

        @Override
        protected long _andMask() {
            return __AND_MASK;
        }

        private static final int __N = ${i};
        private static final long __AND_MASK = ~(~0 << __N);
    }
L1
	@ i++
end
echo "}"

set i=$START
while (${i} <= $END)
	cat <<L2
    public static class N${i} extends _BitVectorSignal<BitVector.N${i}> {
        public BitVector.N${i} _getUninitialized() {
            return new BitVector.N${i}();
        }
    }
L2
	@ i++
end
echo "}"

set i=$START
while (${i} <= $END)
	cat <<L3
    public static class N${i} extends _BitVectorState<BitVector.N${i}> {
        public N${i}() {
            this(new BitVector.N${i}());
        }

        public N${i}(BitVector.N${i} init) {
            super(init);
        }
    }
L3
	@ i++
end
echo "}"

